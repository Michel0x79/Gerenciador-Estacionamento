{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class EntradaComponent {\n  constructor() {\n    this.formBuilder = inject(FormBuilder);\n    this.createForm();\n  }\n  createForm() {\n    this.carroForm = this.formBuilder.group({\n      Marca: ['', Validators.required],\n      Modelo: ['', Validators.required],\n      Placa: ['', Validators.required],\n      HoraEntrada: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const formValues = this.carroForm.value;\n    console.log(formValues);\n  }\n  static #_ = this.ɵfac = function EntradaComponent_Factory(t) {\n    return new (t || EntradaComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EntradaComponent,\n    selectors: [[\"carro-entrada\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 20,\n    vars: 1,\n    consts: [[\"action\", \"post\", 3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [\"for\", \"Marca\"], [\"type\", \"text\", \"id\", \"Marca\", \"formControlName\", \"Marca\", \"form\", \"\"], [\"for\", \"Modelo\"], [\"type\", \"text\", \"id\", \"Modelo\", \"formControlName\", \"Modelo\"], [\"for\", \"Placa\"], [\"type\", \"text\", \"id\", \"Placa\", \"formControlName\", \"Placa\"], [\"for\", \"HoraEntrada\"], [\"type\", \"datetime-local\", \"id\", \"HoraEntrada\", \"formControlName\", \"HoraEntrada\"], [\"type\", \"submit\"]],\n    template: function EntradaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function EntradaComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Marca:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Modelo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Placa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Hora de Entrada:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵtext(19, \"Enviar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.carroForm);\n      }\n    },\n    dependencies: [CommonModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","CommonModule","FormBuilder","Validators","EntradaComponent","constructor","formBuilder","createForm","carroForm","group","Marca","required","Modelo","Placa","HoraEntrada","onSubmit","formValues","value","console","log","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","EntradaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EntradaComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","styles"],"sources":["H:\\Projetos\\Angular\\Gerenciador Estacionamento\\Estacionamento.UI\\src\\app\\components\\entrada\\entrada.component.ts","H:\\Projetos\\Angular\\Gerenciador Estacionamento\\Estacionamento.UI\\src\\app\\components\\entrada\\entrada.component.html"],"sourcesContent":["import { Component, Inject, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'carro-entrada',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './entrada.component.html',\n  styleUrls: ['./entrada.component.scss']\n})\nexport class EntradaComponent {\n  carroForm: FormBuilder;\n  private formBuilder = inject(FormBuilder);\n\n  constructor()\n  {\n    this.createForm();\n  }\n\n  createForm(): void{\n    this.carroForm = this.formBuilder.group({\n      Marca: ['', Validators.required],\n      Modelo: ['', Validators.required],\n      Placa: ['', Validators.required],\n      HoraEntrada: ['', Validators.required],\n\n    });\n  }\n\n  onSubmit(){\n    const formValues = this.carroForm.value;\n    console.log(formValues);\n  }\n}\n","\n\n\n<form action=\"post\" [formGroup]=\"carroForm\" (ngSubmit)=\"onSubmit()\" #formDir=\"ngForm\">\n    <div>\n      <label for=\"Marca\">Marca:</label>\n      <input type=\"text\" id=\"Marca\" formControlName=\"Marca\" form>\n    </div>\n    <div>\n      <label for=\"Modelo\">Modelo:</label>\n      <input type=\"text\" id=\"Modelo\" formControlName=\"Modelo\">\n    </div>\n    <div>\n      <label for=\"Placa\">Placa:</label>\n      <input type=\"text\" id=\"Placa\" formControlName=\"Placa\">\n    </div>\n     <div>\n      <label for=\"HoraEntrada\">Hora de Entrada:</label>\n      <input type=\"datetime-local\" id=\"HoraEntrada\" formControlName=\"HoraEntrada\">\n    </div>\n    <!--<div>\n      <label for=\"horaSaida\">Hora de Saída:</label>\n      <input type=\"datetime-local\" id=\"horaSaida\" formControlName=\"horaSaida\">\n    </div> -->\n    <!-- <div>\n      <label for=\"valorPago\">Valor Pago:</label>\n      <input type=\"number\" id=\"valorPago\" formControlName=\"valorPago\">\n    </div> -->\n    <button type=\"submit\">Enviar</button>\n  </form>"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;AASxD,OAAM,MAAOC,gBAAgB;EAI3BC,YAAA;IAFQ,KAAAC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;IAIvC,IAAI,CAACK,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAChCC,MAAM,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACjCE,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MAChCG,WAAW,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ;KAEtC,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAG,IAAI,CAACR,SAAS,CAACS,KAAK;IACvCC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACzB;EAAC,QAAAI,CAAA,G;qBAtBUhB,gBAAgB;EAAA;EAAA,QAAAiB,EAAA,G;UAAhBjB,gBAAgB;IAAAkB,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR7BP,EAAA,CAAAS,cAAA,iBAAsF;QAA1CT,EAAA,CAAAU,UAAA,sBAAAC,mDAAA;UAAA,OAAYH,GAAA,CAAAlB,QAAA,EAAU;QAAA,EAAC;QAC/DU,EAAA,CAAAS,cAAA,UAAK;QACgBT,EAAA,CAAAY,MAAA,aAAM;QAAAZ,EAAA,CAAAa,YAAA,EAAQ;QACjCb,EAAA,CAAAc,SAAA,eAA2D;QAC7Dd,EAAA,CAAAa,YAAA,EAAM;QACNb,EAAA,CAAAS,cAAA,UAAK;QACiBT,EAAA,CAAAY,MAAA,cAAO;QAAAZ,EAAA,CAAAa,YAAA,EAAQ;QACnCb,EAAA,CAAAc,SAAA,eAAwD;QAC1Dd,EAAA,CAAAa,YAAA,EAAM;QACNb,EAAA,CAAAS,cAAA,WAAK;QACgBT,EAAA,CAAAY,MAAA,cAAM;QAAAZ,EAAA,CAAAa,YAAA,EAAQ;QACjCb,EAAA,CAAAc,SAAA,gBAAsD;QACxDd,EAAA,CAAAa,YAAA,EAAM;QACLb,EAAA,CAAAS,cAAA,WAAK;QACqBT,EAAA,CAAAY,MAAA,wBAAgB;QAAAZ,EAAA,CAAAa,YAAA,EAAQ;QACjDb,EAAA,CAAAc,SAAA,gBAA4E;QAC9Ed,EAAA,CAAAa,YAAA,EAAM;QASNb,EAAA,CAAAS,cAAA,kBAAsB;QAAAT,EAAA,CAAAY,MAAA,cAAM;QAAAZ,EAAA,CAAAa,YAAA,EAAS;;;QAzBrBb,EAAA,CAAAe,UAAA,cAAAP,GAAA,CAAAzB,SAAA,CAAuB;;;mBDI/BP,YAAY;IAAAwC,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}